[user]
    email = 1838962+tatsuyafujisaki@users.noreply.github.com
    name = Tatsuya Fujisaki
[advice]
    skippedCherryPicks = false
[clean]
    requireForce = true # prevents "git clean" without "-f" from causing an error.
[core]
    autocrlf = input # https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration
    editor = code -w
    excludesFile = ~/.gitignore
    ignoreCase = false
[fetch]
    prune = true
    pruneTags = true
    recurseSubmodules = true
# The configurations below are generated automatically upon installation of GitHub Desktop.
# https://docs.github.com/en/desktop/configuring-and-customizing-github-desktop/about-git-large-file-storage-and-github-desktop
# https://git-scm.com/docs/gitattributes#_filter
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[http]
    emptyAuth = true # prevents "remote: HTTP Basic: Accesss denied" when cloning a repository. https://docs.gitlab.com/ee/integration/kerberos.html#http-basic-access-denied-when-cloning
[pager]
    branch = false # makes "git branch" list branches without using a pager.
[pull]
    rebase = true
[rebase]
    autoSquash = true
    autoStash = true
[diff]
    tool = vscode
[difftool]
    prompt = false
[difftool "vscode"]
    cmd = code -w -d $LOCAL $REMOTE
[merge]
    tool = vscode
[mergetool]
    prompt = false
[mergetool "vscode"]
    cmd = code -w $MERGED
[alias]
    a = !pbpaste | git apply --ignore-space-change
    b = branch
    bc = branch --show-current
    # stages all the changes, replacing the previous commit with the new commit message.
    # --no-verify bypasses the pre-commit and commit-msg hooks.
    cam = commit --all --amend --no-verify -m
    # adds untracked files, stages all changes, and replaces the previous commit, reusing the existing commit message.
    can = !git add --all && git commit --all --amend --no-edit
    cge = config --global --edit # opens ~/.gitconfig
    cgl = config --global --list # lists all the variables in ~/.gitconfig
    cm = commit -m
    co = checkout
    cp = cherry-pick
    csol = config --show-origin --list
    dbn = !git --no-pager diff --name-only develop | xargs basename | sort # prints basenames of the files that are different from the develop branch.
    dn = --no-pager diff --name-only develop # prints the names of files that differ from those in the develop branch.
    ds = --no-pager diff --shortstat develop # prints the number of files that have been changed, as well as the number of lines that have been added or deleted.
    empty = commit --allow-empty --allow-empty-message --no-edit
    lp = log --patch -- # takes <file> and shows the change history of the file.
    ma = merge --abort
    md = merge develop --no-edit
    mt = mergetool
    pf = push --force-with-lease --force-if-includes
    r = rebase
    ra = rebase --abort
    rc = rebase --continue
    rd = !git pull origin develop && git rebase develop
    rgu = remote get-url origin
    ri = rebase --interactive
    rir = rebase --interactive --root
    rs = reset HEAD~
    rsh = reset HEAD~ --hard
    sw = switch
    # stash-related
    st = stash push --include-untracked

